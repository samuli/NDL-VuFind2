<?php // This template is a JSON fragment of a complete Swagger specification ?>
<?php ob_start(); ?>
                    {
                        "name": "field[]",
                        "in": "query",
                        "description": "Fields to return.<?php if ($this->defaultFields): ?> If not specified, a set of default fields is returned.\n\nThe default fields are:\n- <?=implode('\n- ', array_map('addslashes', $this->defaultFields)) ?><?php endif; ?>",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    }
<?php $field = ob_get_contents(); ?>
<?php ob_end_clean(); ?>
<?php ob_start(); ?>
                    {
                        "name": "prettyPrint",
                        "in": "query",
                        "description": "Whether to pretty-print the response. Useful for observing the results in a browser.",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "lng",
                        "in": "query",
                        "description": "Language for returned translated strings.",
                        "type": "string",
                        "enum": [<?=implode(', ', array_map(function ($v) { return '"' . addslashes($v) . '"'; }, array_keys($this->config->Languages->toArray()))) ?>],
                        "default": "<?=addslashes($this->config->Site->language) ?>"
                    },
                    {
                        "name": "callback",
                        "in": "query",
                        "description": "A callback that can be used for JSONP.",
                        "type": "string"
                    }
<?php $commonFields = ob_get_contents(); ?>
<?php ob_end_clean(); ?>
{
    "paths": {
        "/record": {
            "get": {
                "summary": "Fetch records",
                "description": "<?=str_replace(["\n", "\r"], '', $this->render('searchapi/record-description.phtml'))?>",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A single record ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "description": "Multiple record IDs",
                        "required": false,
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
<?=$field ?>,
<?=$commonFields ?>
                ],
                "tags": [
                    "Record"
                ],
                "responses": {
                    "200": {
                        "description": "Response containing result count and records",
                        "schema": {
                            "$ref": "#/definitions/SearchResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "summary": "Search the index",
                "description": "<?=str_replace(["\n", "\r"], '', $this->render('searchapi/record-description.phtml'))?>",
                "parameters": [
                    {
                        "name": "lookfor",
                        "in": "query",
                        "description": "Search terms. May be a single term, multiple words or a complex query containing boolean operators (AND, OR, NOT), quotes etc. Terms may also be prefixed with a field name (e.g. author:smith) to target only that field (see also type parameter).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Search type. The following search types are available:\n- <?=implode('\n- ', array_map('addslashes', array_keys($this->searchTypes))) ?>",
                        "required": false,
                        "type": "string",
                        "default": "<?=addslashes($this->defaultSearchType) ?>"
                    },
<?=$field ?>,
                    {
                        "name": "filter[]",
                        "in": "query",
                        "description": "Filter queries. Repeat for every filter.\nThe format for a filter is field:value.\n\n'AND' filtering is used by default. 'OR' or 'NOT' filtering can be used by prepending the field with '~' (OR) or '-' (NOT).",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facet[]",
                        "in": "query",
                        "description": "Fields to facet on. Repeat for every field. <?php if ($this->facetConfig): ?>At least the following fields are available for faceting (there may be additional facetable index fields not published here, see https://www.kiwi.fi/display/Finna/Kenttien+mappaukset+eri+formaateista+Finnan+indeksiin):\n- <?=implode('\n- ', array_map('addslashes', array_keys($this->facetConfig))) ?><?php endif; ?>",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "facetFilter[]",
                        "in": "query",
                        "description": "Faceting result filters. Contains regular expressions that the facet must match for it to be returned. The result will include the matched facet items and for hierarchical facets any ancestor values.\nFormat for a facet filter is field:regexp, e.g. `author_facet:Sm.*th`.\n\n**N.B.**The filtered facet needs to be present in the list of returned facets (facet[] parameter).",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort method.",
                        "type": "string",
                        "enum": [<?=implode(', ', array_map(function ($v) { return '"' . addslashes($v) . '"'; }, array_keys($this->sortOptions))) ?>],
                        "default": "<?=addslashes($this->defaultSort) ?>"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Record page (first page is 1).",
                        "type": "integer",
                        "minimum": 1,
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Records to return per page. Set to 0 to return no records.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 100,
                        "default": 20
                    },
<?=$commonFields ?>
                ],
                "tags": [
                    "Search"
                ],
                "responses": {
                    "200": {
                        "description": "Response containing result count, records and/or facets.",
                        "schema": {
                            "$ref": "#/definitions/SearchResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Authors": {
            "type": "object",
            "properties": {
                "main": {
                    "description": "Main authors",
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AuthorWithRoles"
                    }
                },
                "secondary": {
                    "description": "Secondary authors",
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AuthorWithRoles"
                    }
                },
                "corporate": {
                    "description": "Corporate authors",
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AuthorWithRoles"
                    }
                }
            }
        },
        "AuthorWithRoleAndDate": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "date": {
                    "description": "Date associated with the author",
                    "type": "string"
                },
                "role": {
                    "description": "Role",
                    "type": "string"
                }
            }
        },
        "AuthorWithRoles": {
            "type": "object",
            "properties": {
                "Author name": {
                    "type": "array",
                    "description": "Author's roles",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AverageRating": {
            "description": "Average rating",
            "type": "object",
            "properties": {
                "average": {
                    "description": "Average rating",
                    "type": "integer"
                },
                "count": {
                    "description": "Number of ratings",
                    "type": "integer"
                }
            }
        },
        "ComponentPart": {
            "type": "object",
            "properties": {
                "number": {
                    "description": "Order number in the host record",
                    "type": "string"
                },
                "id": {
                    "description": "Record id",
                    "type": "string"
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "uniformTitle": {
                    "description": "Uniform title",
                    "type": "string"
                },
                "authors": {
                    "description": "Main authors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "presenters": {
                    "description": "Presenters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "arrangers": {
                    "description": "Arrangers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "otherAuthors": {
                    "description": "Other authors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status code",
                    "type": "string",
                    "enum": ["ERROR"]
                },
                "statusMessage": {
                    "description": "A descriptive error message",
                    "type": "string"
                }
            },
            "required": ["status", "statusMessage"]
        },
        "Event": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of the event",
                    "type": "string"
                },
                "name": {
                    "description": "Event name",
                    "type": "string"
                },
                "date": {
                    "description": "Date",
                    "type": "string"
                },
                "method": {
                    "description": "Method used",
                    "type": "string"
                },
                "materials": {
                    "description": "Materials used",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "places": {
                    "description": "Places",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "actors": {
                    "description": "Actors in the event",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "culture": {
                    "description": "Cultural context",
                    "type": "string"
                },
                "description": {
                    "description": "Event description",
                    "type": "string"
                }
            }
        },
        "Events": {
            "description": "Events related to the described object (e.g. creation, use, exhibition)",
            "type": "object",
            "properties": {
                "Event name": {
                    "$ref": "#/definitions/Event"
                }
            }
        },
        "Facet": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Facet value",
                    "type": "string"
                },
                "translated": {
                    "description": "Translated facet value",
                    "type": "string"
                },
                "count": {
                    "description": "Count of records that can be found if the facet is added to the search as a filter",
                    "type": "integer"
                },
                "href": {
                    "description": "The current search with the facet added as a filter",
                    "type": "string"
                },
                "isApplied": {
                    "description": "True if if the facet is in use in the filter parameter of the query",
                    "type": "boolean"
                },
                "children": {
                    "description": "For hierarchical facets, any child facets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Facet"
                    }
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "urls": {
                    "description": "Image URLs (different sizes are subject to availability)",
                    "type": "object",
                    "properties": {
                        "small": {
                            "description": "Small image",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "medium": {
                            "description": "Medium image",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "large": {
                            "description": "Large image",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "description": {
                    "description": "Image description",
                    "type": "string"
                },
                "rights": {
                    "description": "Image access and usage rights",
                    "type": "object",
                    "properties": {
                        "copyright": {
                            "description": "License",
                            "type": "string"
                        },
                        "description": {
                            "description": "Human-readable description",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "link": {
                            "description": "Link to copyright information",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "Inscription": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Inscription content",
                    "type": "string"
                },
                "type": {
                    "description": "Inscription type",
                    "type": "string"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Link type (e.g. id, isn or title)",
                    "type": "string"
                },
                "value": {
                    "description": "Link value (e.g. record ID, ISBN or title)",
                    "type": "string"
                },
                "exclude": {
                    "description": "Record IDs that need to be excluded from the results",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "OnlineLink": {
            "type": "object",
            "properties": {
                "url": {
                    "description": "Link URL",
                    "type": "string"
                },
                "text": {
                    "description": "Link text",
                    "type": "string"
                },
                "source": {
                    "description": "Link source (data source)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TranslatedField"
                    }
                }
            }
        },
        "OtherRecordLink": {
            "type": "object",
            "properties": {
                "heading": {
                    "description": "Link heading",
                    "type": "string"
                },
                "title": {
                    "description": "Title used for linking",
                    "type": "string"
                },
                "author": {
                    "description": "Author used for linking",
                    "type": "string"
                },
                "isn": {
                    "description": "ISBN or ISSN used for linking",
                    "type": "string"
                }
            }
        },
        "Record": {
            "type": "object",
            "properties": <?=json_encode($this->recordFields) ?>
        },
        "RecordLink": {
            "type": "object",
            "properties": {
                "title": {
                    "description": "Link title",
                    "type": "string"
                },
                "translated": {
                    "description": "Translated link title",
                    "type": "string"
                },
                "value": {
                    "description": "Link value",
                    "type": "string"
                },
                "link": {
                    "$ref": "#/definitions/Link"
                }
            }
        },
        "SearchResponse": {
            "type": "object",
            "properties": {
                "resultCount": {
                    "description": "Number of results",
                    "type": "integer"
                },
                "records": {
                    "description": "Records",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Record"
                    }
                },
                "facets": {
                    "description": "Facets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Facet"
                    }
                },
                "status": {
                    "description": "Status code",
                    "type": "string",
                    "enum": ["OK"]
                }
            },
            "required": ["resultCount", "status"]
        },
        "Subject": {
            "type": "object",
            "properties": {
                "heading": {
                    "description": "Subject heading parts as an array from the least specific to the most specific",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "Subject type",
                    "type": "string",
                    "enum": ["", "personal name", "corporate name", "meeting name", "uniform title", "chronological", "topic", "geographic", "genre\/form", "occupation", "keyword"]
                },
                "source": {
                    "description": "Subject source/thesaurus",
                    "type": "string"
                }
            }
        },
        "TranslatedField": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "Field value",
                    "type": "string"
                },
                "translated": {
                    "description": "Translated field value",
                    "type": "string"
                }
            }
        },
        "Url": {
            "type": "object",
            "properties": {
                "url": {
                    "description": "URL",
                    "type": "string"
                },
                "desc": {
                    "description": "URL description",
                    "type": "string"
                }
            }
        }
    }
}
