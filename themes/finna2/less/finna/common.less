.page-content {
  width: 100%;
  @media (min-width: @screen-lg) {
    width: 75%;
  }
}

.badge {
  padding: 0 0 0 2px;
  font-size: @badge-font-size;
  line-height: inherit;
  vertical-align: inherit;
  margin-top: 1px;
}

.close {
  text-shadow: none;
  .opacity(.8);

  &:hover,
  &:focus {
    .opacity(1);
  }
}

.input-group {
  .form-control {
    width: auto;
  }
}

.media,
.media-body {
  overflow: visible;
}

@media (max-width: @screen-xs-max) {
  .media-left, .media-right, .media-body {
    display: block;
  }
}

.popover {
  min-width: min(200px, @popover-max-width);
}

@media print {
  // Don't show certain links and buttons
  a.title, .dateyeartype a,.image-popup-trigger, .image-popup-navi, .record-details a, .record-authors a, .record-core-metadata a,.recordTabs a, .paginationSimple a {
    &[href]:after {
      content: none !important;
    }
  }
  button, a.btn {
    display: none !important;
  }
}

.date-and-year {
  font-size: @font-size-base;
  line-height: 1.35em;
  letter-spacing: 0.5px;
  font-weight: 400;
  margin-bottom: 6px;
}

.resultHierarchyLinks {
  margin-bottom: 6px;
}

.hierarchyTreeLink {
  margin-top: 6px;
}

.archive-label {
  font-size: @font-size-base;
  font-weight: 400;
  letter-spacing: 0px;
  color: @gray-light;
}

.dedupInformation .dedup-select {
  font-weight: bold;
  margin-bottom: 4px;
  height: 30px;
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: relative;
  margin-left: 0px;
}

.datepicker {
  & .datepicker-switch {
    color: @link-color;
    font-size: 1.1em;
  }
  & .prev,& .next {
    font-size: 1.1em;
  }
  &.dropdown-menu {
    padding: 10px;
  }
}

.checkbox label{
  display: inline;
  padding-left: 0;
}

.add-to-favorite-col {
  @media (min-width: @screen-sm) {
    position: absolute;
    top: 0px;
    right: 0px;
    text-align: right;
    i {
      font-size: 16px;
      text-align: right;
      margin-bottom: 5px;
    }
  }

  .qrcode {
    width: 90px;
    height: 90px;
  }
  .finnaQrcodeLink {
    background-color: @body-bg;
  }
  .qr-box {
    box-shadow: 0 6px 12px @gray-mid-light;
    border: 1px solid @gray-mid-light;
    border-radius: 10px;
    padding: 5px;
    background: #fff;
  }
}

//== SYSTEM MESSAGES
.system-messages {
  background-color: @state-warning-bg;
  padding-top: 0.6em;
  padding-bottom: 0.6em;
  text-align: center;
  z-index: 1;
  @media (max-width: @grid-float-breakpoint) {
    position: relative;
    top: @navbar-height;
  }
}

/* Cookie Consent */
.cookie-consent {
  background-color: @cookie-consent-background-color;
  color: @cookie-consent-color;
  display: flex;
  align-items: center;
  z-index: 1;
  .cookie-consent-text {
    flex: 1;
    margin-right: 19px;
    padding-top: 0.6em;
    padding-bottom: 0.6em;
    a {
      color: @cookie-consent-link-color;
      text-decoration: underline;
    }
  }
  .cookie-consent-button {
    position: relative;
    right: 15px;
    a {
      border: @cookie-consent-button-border;
    }
  }
  @media (max-width: @grid-float-breakpoint) {
    position: relative;
    top: @navbar-height;
    .cookie-consent-button {
      right: 0;
    }
  }
}

/* TABLES */
table.content-table {
  font-size: @content-font-size-base;
  margin-top: 0;
  margin-bottom: 2.9em;
  line-height: 1.4em;
}

.content-table th, .content-table td {
  padding: 0.4em 1.5em 0.4em 0;
  font-weight: normal;
  border-bottom: 1px solid @gray-lighter;
}
.table.table-finna-record {
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        padding: @table-finna-record-cell-padding;
        word-wrap: break-word;
      }
      // grouped record fields
      &.group {
        // use non-bolded th's since the group has a separate title
        th, td {
          font-weight: normal;
          line-height: 15px;
        }
        // add vertical space to the first row that follows the group
        & + tr:not(.group) {
            & th, td {
                padding-top: 0.8em;
            }
        }
      }
    }
  }
  ul {
    margin-bottom: 0;
  }
  @media (min-width: @screen-sm-min) {
    table-layout: fixed;
  }
}
.table.citation {
  table-layout: fixed;
}
.table.record-field-groups {
  > tbody > tr > th {
    text-transform: uppercase;
    @media (min-width: @screen-sm-min) {
      text-transform: none;
    }
  }
  > tbody > tr > td {
    @media (min-width: @screen-sm-min) {
      padding-left: 80px;
    }
    > table {
      > thead,
      > tbody,
      > tfoot {
        > tr {
          > th,
          > td {
            padding: @table-finna-record-cell-padding;
            word-wrap: break-word;
          }
        }
      }
    }
  }
  .subheading {
    margin: 0;
    padding: 6px 0;
    font-weight: bold;
    text-transform: none;
  }
}

table#componentparts {
  & th {
    background-color: @list-group-bg;
    border-right: 2px solid @body-bg;
    &.sorting_asc,&.sorting_desc,&.sorting {
      background-position: center left;
      padding-left: 20px;
    }
  }
  & .even td {
    background: fade(@nav-tabs-border-color, 5%);
  }
  & td a {
    font-weight: bold;
  }
}

.list-group {
  border-radius: 0px;
}

// Unordered and Ordered lists
ul,
ol {
  padding: 0;
  & li {
    list-style-type: none;
  }
}

// Content pages list options
// --------------------------------------------------

//Unstyled list
.list-plain {
  font-size: @content-font-size-base;
  line-height: @content-line-height-base;
  padding-left: 0;
  padding-bottom: 0.9em;

  > li {
    list-style-type: none;
  }
}

// Bulleted list
.list-bullets {
  font-size: @content-font-size-base;
  line-height: @content-line-height-base;
  padding-left: 1.2em;
  padding-bottom: 0.9em;

  > li {
    list-style-type: disc;
  }
}

// Numbered list
.list-numbers {
  font-size: @content-font-size-base;
  line-height: @content-line-height-base;
  padding-left: 1.5em;
  padding-bottom: 0.9em;

  > li {
    list-style-type: decimal;
  }
}

.btn-unstyled {
  border: none;
  background-color: transparent;
}

// A general-purpose flexbox layout mixin for switching between a horizontal
// and a vertical layout at a given, container-based breakpoint.
//
// @switcher-breakpoint - A vertical layout will be used if the width of the
//                        container is less than this. A horizontal layout
//                        will be used otherwise.
.switcher-layout(@switcher-breakpoint) {
  // Flex container.
  & > * {
    display: flex;
    flex-wrap: wrap;
  }
  // Flex items.
  // By default all flex items are the same size but it it is possible to set a
  // different flex-grow for specific items.
  & > * > * {
    flex-grow: 1;
    flex-basis: calc(~'('@switcher-breakpoint ~'- 100%) * 999');
  }
  // These rules provide additional robustness for horizontal layouts containing
  // many (five or more) elements.
  & > * > :nth-last-child(n+5),
  & > * > :nth-last-child(n+5) ~ * {
    flex-basis: 100%;
  }
}

// A switcher layout helper mixin adding spacing useful for lines.
.switcher-line-layout(@switcher-breakpoint) {
  .switcher-layout(@switcher-breakpoint);
  & > * > * + * {
    padding-left: 1.5em;
  }
}

// Utility classes for setting switcher layouts.
.switcher-line-xxs {
  .switcher-line-layout(@screen-xxs);
}
.switcher-line-xxxs {
  .switcher-line-layout(280px);
}
